cccccccccccccccccccccccccccccccccccccccccccccc      
c            Wiberg BOs, orthogonal basis
cccccccccccccccccccccccccccccccccccccccccccccc      

      subroutine wibergo(n,ndim,at,xyz,P)
      use bascom
      implicit none
      integer n,ndim,at(n)
      real*8 xyz(3,n)
      real*8 P(ndim,ndim)

      real*8 xsum,rab
      real*8 wb(n,n)
      integer i,j,k,m,ibmax,imem(n),lin
      character*2 asym
      integer llao(4)
      data llao /1,3,5,7 /
      integer aose(2,n)

      m = 1     
      do i=1,n 
         aose(1,i)=m 
         do k=1,bas_nsh(at(i))
            m= m + llao(bas_lsh(k,at(i))+1)
         enddo
         aose(2,i)=m-1
      enddo

      wb=0
      do i=1,n 
         do j=1,i-1
         xsum=0.0
         rab=(xyz(1,i)-xyz(1,j))**2
     .      +(xyz(2,i)-xyz(2,j))**2
     .      +(xyz(3,i)-xyz(3,j))**2
         if(rab.lt.400.0)then
            do k=aose(1,i),aose(2,i)     ! AOs on atom i
               do m=aose(1,j),aose(2,j)  ! AOs on atom j
                  xsum=xsum+P(k,m)**2
               enddo
            enddo
         endif
         wb(i,j)=xsum
         wb(j,i)=xsum
         enddo
      enddo

      write(*,*)'largest Wiberg (ZDO) bond orders for each atom'
      write(*,*)'          total WBO             WBO to atom > 0.1 ...'
      do i=1,n
         do j=1,n
            imem(j)=j
         enddo
         call wibsort(n,i,imem,wb)
         ibmax=0
         xsum =0
         do j=1,n
            if(wb(i,j).gt.0.1)ibmax=j
            xsum=xsum+wb(i,j)
         enddo
         write(*,'(i6,a4,1x,f6.3,9(4x,a2,i4,f6.3))')
     .   i,asym(at(i)),xsum,
     .   (asym(at(imem(j))),imem(j),wb(i,j),j=1,ibmax)
      enddo

      end

cccccccccccccccccccccccccccccccccccccccc

      SUBROUTINE wibsort(ncent,imo,imem,qmo)
      IMPLICIT REAL*8(A-H,O-Z)
      dimension qmo(ncent,ncent)
      dimension imem(ncent)

      do 140   ii = 2,ncent
         i = ii - 1
         k = i
         pp= qmo(imo,i)
         do 120   j = ii, ncent
            if (qmo(imo,j) .lt. pp) go to 120
            k = j
            pp=qmo(imo,j)
  120    continue
         if (k .eq. i) go to 140
         qmo(imo,k) = qmo(imo,i)
         qmo(imo,i) = pp

         ihilf=imem(i)
         imem(i)=imem(k)
         imem(k)=ihilf
  140 continue

      end

